name: Loopin Client Docker CI

on:
  push:
    paths:
      - 'src/**'
    branches:
      - 'main'
      - 'ci'
  pull_request:
    paths:
      - 'src/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  OWNER: sglee487
  IMAGE_NAME: loopin-client
  VERSION: ${{ github.sha }}

  # Release only on pushes to specific branches
  SHOULD_RELEASE: ${{ github.event_name == 'push' && (
    github.ref_name == 'main' ||
    github.ref_name == 'argocd' ||
    github.ref_name == 'deploy') }}

jobs:
  # ─────────────────────────────────────────────
  # 1) Build & push per-architecture images
  # ─────────────────────────────────────────────
  ci:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04        # amd64
            platform: linux/amd64
            suffix: ubuntu-22.04
          - os: ubuntu-22.04-arm    # arm64 (preview runner)
            platform: linux/arm64
            suffix: ubuntu-22.04-arm
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        if: ${{ env.SHOULD_RELEASE == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: ${{ env.SHOULD_RELEASE }}
          platforms: ${{ matrix.platform }}
          tags: ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-${{ matrix.suffix }}

  # ─────────────────────────────────────────────
  # 2) Merge images into a multi-arch manifest
  # ─────────────────────────────────────────────
  manifest:
    if: ${{ github.event_name == 'push' && (
      github.ref_name == 'main' ||
      github.ref_name == 'argocd' ||
      github.ref_name == 'deploy') }}
    needs: ci
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create & push multi-arch manifest
        run: |
          # ensure buildx builder exists
          docker buildx create --use --name tmpbuilder || true

          # create manifest for VERSION and latest tags
          docker buildx imagetools create \
            -t ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
            -t ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest \
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-ubuntu-22.04 \
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-ubuntu-22.04-arm 